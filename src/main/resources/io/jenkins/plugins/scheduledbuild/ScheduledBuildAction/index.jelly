<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:l="/lib/layout" xmlns:f="/lib/form">
    <l:layout title="预约构建 - ${it.job.displayName}" permission="${it.job.READ}">
        <st:include page="sidepanel.jelly" it="${it.job}"/>
        <l:main-panel>
            <style>
                .scheduled-build-container {
                    max-width: 1200px;
                }
                .scheduled-build-header {
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    color: white;
                    padding: 20px 30px;
                    border-radius: 8px;
                    margin-bottom: 30px;
                    box-shadow: 0 4px 6px rgba(0,0,0,0.1);
                }
                .scheduled-build-header h1 {
                    margin: 0;
                    color: white;
                    font-size: 28px;
                    font-weight: 600;
                }
                .add-schedule-card {
                    background: white;
                    padding: 25px;
                    margin-bottom: 30px;
                    border-radius: 8px;
                    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
                    border: 1px solid #e0e0e0;
                }
                .add-schedule-card h2 {
                    margin-top: 0;
                    color: #333;
                    font-size: 20px;
                    font-weight: 600;
                    border-bottom: 2px solid #667eea;
                    padding-bottom: 10px;
                    margin-bottom: 20px;
                }
                .form-row {
                    margin-bottom: 20px;
                }
                .form-label {
                    display: block;
                    font-weight: 600;
                    color: #555;
                    margin-bottom: 8px;
                    font-size: 14px;
                }
                /* 保持 Jenkins 原生样式，只添加必要的自定义样式 */
                .scheduled-build-container .form-section {
                    margin-top: 20px;
                }
                
                /* 确保参数部分有适当的间距 */
                .scheduled-build-container .form-section h3 {
                    margin-top: 0;
                    margin-bottom: 15px;
                    color: #333;
                    font-size: 16px;
                    font-weight: 600;
                }
                
                /* 参数标签样式 */
                .scheduled-build-container .form-label {
                    font-weight: bold !important;
                    color: #333 !important;
                    font-size: 14px !important;
                }
                
                /* 参数描述样式 */
                .scheduled-build-container .form-description {
                    color: #666 !important;
                    font-size: 12px !important;
                    font-style: italic !important;
                }
                
                /* 必填参数样式 */
                .scheduled-build-container .form-label[required] {
                    color: #d73527 !important;
                }
                
                /* 参数输入框样式 */
                .scheduled-build-container .form-input,
                .scheduled-build-container .form-textarea,
                .scheduled-build-container .form-select {
                    border: 1px solid #ccc !important;
                    border-radius: 4px !important;
                    padding: 8px !important;
                    font-size: 14px !important;
                }
                
                /* 参数输入框焦点样式 */
                .scheduled-build-container .form-input:focus,
                .scheduled-build-container .form-textarea:focus,
                .scheduled-build-container .form-select:focus {
                    border-color: #4a90e2 !important;
                    box-shadow: 0 0 0 2px rgba(74, 144, 226, 0.2) !important;
                }
                
                /* 自定义按钮样式 */
                .btn-primary {
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    color: white;
                    padding: 12px 30px;
                    font-size: 15px;
                    font-weight: 600;
                    border: none;
                    border-radius: 6px;
                    cursor: pointer;
                    transition: all 0.3s;
                    box-shadow: 0 2px 4px rgba(102, 126, 234, 0.3);
                }
                .btn-primary:hover {
                    transform: translateY(-2px);
                    box-shadow: 0 4px 8px rgba(102, 126, 234, 0.4);
                }
                .btn-primary {
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    color: white;
                    padding: 12px 30px;
                    font-size: 15px;
                    font-weight: 600;
                    border: none;
                    border-radius: 6px;
                    cursor: pointer;
                    transition: all 0.3s;
                    box-shadow: 0 2px 4px rgba(102, 126, 234, 0.3);
                }
                .btn-primary:hover {
                    transform: translateY(-2px);
                    box-shadow: 0 4px 8px rgba(102, 126, 234, 0.4);
                }
                .btn-danger {
                    background: #dc3545;
                    color: white;
                    padding: 6px 14px;
                    border: none;
                    border-radius: 4px;
                    cursor: pointer;
                    font-size: 13px;
                    transition: background 0.3s;
                }
                .btn-danger:hover {
                    background: #c82333;
                }
                .btn-secondary {
                    background: #6c757d;
                    color: white;
                    padding: 6px 14px;
                    border: none;
                    border-radius: 4px;
                    cursor: pointer;
                    font-size: 13px;
                    transition: background 0.3s;
                }
                .btn-secondary:hover {
                    background: #5a6268;
                }
                .schedule-list-card {
                    background: white;
                    padding: 25px;
                    margin-bottom: 30px;
                    border-radius: 8px;
                    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
                    border: 1px solid #e0e0e0;
                }
                .schedule-list-card h2 {
                    margin-top: 0;
                    color: #333;
                    font-size: 20px;
                    font-weight: 600;
                    margin-bottom: 20px;
                }
                .schedule-count {
                    background: #667eea;
                    color: white;
                    padding: 2px 10px;
                    border-radius: 12px;
                    font-size: 14px;
                    font-weight: 600;
                    margin-left: 10px;
                }
                .no-data {
                    text-align: center;
                    padding: 40px;
                    color: #999;
                    font-size: 14px;
                }
                .status-badge {
                    padding: 4px 12px;
                    border-radius: 12px;
                    font-size: 12px;
                    font-weight: 600;
                    display: inline-block;
                }
                .status-executed {
                    background: #d4edda;
                    color: #155724;
                }
                .status-cancelled {
                    background: #f8d7da;
                    color: #721c24;
                }
                .status-pending {
                    background: #d1ecf1;
                    color: #0c5460;
                }
                .status-expired {
                    background: #fff3cd;
                    color: #856404;
                }
                .countdown {
                    font-weight: 600;
                    color: #667eea;
                    font-family: 'Courier New', monospace;
                }
                .param-display {
                    background: #f8f9fa;
                    padding: 8px 12px;
                    border-radius: 4px;
                    font-family: 'Courier New', monospace;
                    font-size: 12px;
                    color: #495057;
                    border: 1px solid #e9ecef;
                }
                .checkbox-wrapper {
                    display: flex;
                    align-items: center;
                }
                .checkbox-wrapper input[type="checkbox"] {
                    width: 18px;
                    height: 18px;
                    margin-right: 8px;
                    cursor: pointer;
                }
                .schedule-type-selector {
                    display: flex;
                    gap: 10px;
                    margin-bottom: 20px;
                }
                .schedule-type-option {
                    flex: 1;
                    padding: 15px;
                    border: 2px solid #e0e0e0;
                    border-radius: 8px;
                    cursor: pointer;
                    text-align: center;
                    transition: all 0.3s;
                    background: white;
                }
                .schedule-type-option:hover {
                    border-color: #667eea;
                    background: #f8f9ff;
                }
                .schedule-type-option.active {
                    border-color: #667eea;
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    color: white;
                }
                .schedule-type-content {
                    display: none;
                    padding: 20px;
                    background: #f8f9fa;
                    border-radius: 8px;
                    margin-top: 20px;
                }
                .schedule-type-content.active {
                    display: block;
                }
                .weekday-selector {
                    display: flex;
                    gap: 10px;
                    flex-wrap: wrap;
                }
                .weekday-option {
                    flex: 0 0 calc(14.28% - 10px);
                    padding: 10px;
                    border: 2px solid #e0e0e0;
                    border-radius: 6px;
                    text-align: center;
                    cursor: pointer;
                    user-select: none;
                    transition: all 0.2s;
                }
                .weekday-option:hover {
                    border-color: #667eea;
                }
                .weekday-option.selected {
                    border-color: #667eea;
                    background: #667eea;
                    color: white;
                }
                .rule-card {
                    background: #f8f9fa;
                    padding: 15px;
                    margin-bottom: 15px;
                    border-radius: 8px;
                    border-left: 4px solid #667eea;
                }
                .rule-card.disabled {
                    opacity: 0.6;
                    border-left-color: #999;
                }
                .rule-header {
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    margin-bottom: 10px;
                }
                .rule-title {
                    font-weight: 600;
                    color: #333;
                    font-size: 15px;
                }
                .rule-actions {
                    display: flex;
                    gap: 8px;
                }
                .modal {
                    display: none;
                    position: fixed;
                    z-index: 1000;
                    left: 0;
                    top: 0;
                    width: 100%;
                    height: 100%;
                    background-color: rgba(0,0,0,0.5);
                }
                .modal-content {
                    background-color: white;
                    margin: 5% auto;
                    padding: 30px;
                    border-radius: 8px;
                    width: 80%;
                    max-width: 800px;
                    max-height: 80vh;
                    overflow-y: auto;
                    box-shadow: 0 4px 20px rgba(0,0,0,0.3);
                }
                .modal-header {
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    margin-bottom: 20px;
                    padding-bottom: 15px;
                    border-bottom: 2px solid #667eea;
                }
                .modal-header h2 {
                    margin: 0;
                    color: #667eea;
                }
                .close {
                    color: #aaa;
                    font-size: 28px;
                    font-weight: bold;
                    cursor: pointer;
                    line-height: 20px;
                }
                .close:hover {
                    color: #000;
                }
                .btn-edit {
                    background: #ffc107;
                    color: #333;
                    padding: 6px 14px;
                    border: none;
                    border-radius: 4px;
                    cursor: pointer;
                    font-size: 13px;
                    transition: background 0.3s;
                    margin-right: 5px;
                }
                .btn-edit:hover {
                    background: #ffb300;
                }
            </style>
            
            <script type="text/javascript">
                // 动态倒计时更新
                function updateCountdowns() {
                    var countdowns = document.querySelectorAll('.countdown');
                    countdowns.forEach(function(elem) {
                        var targetTime = parseInt(elem.getAttribute('data-target'));
                        if (!targetTime) return;
                        
                        var now = new Date().getTime();
                        var diff = targetTime - now;
                        
                        if (diff &lt;= 0) {
                            elem.textContent = '即将执行...';
                            elem.style.color = '#dc3545';
                            return;
                        }
                        
                        var days = Math.floor(diff / (1000 * 60 * 60 * 24));
                        var hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                        var minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));
                        var seconds = Math.floor((diff % (1000 * 60)) / 1000);
                        
                        var result = '';
                        if (days > 0) result += days + '天 ';
                        if (hours > 0 || days > 0) result += hours + '小时 ';
                        if (minutes > 0 || hours > 0 || days > 0) result += minutes + '分 ';
                        result += seconds + '秒';
                        
                        elem.textContent = result;
                        
                        // 根据剩余时间改变颜色
                        if (diff &lt; 300000) { // 小于5分钟
                            elem.style.color = '#dc3545';
                        } else if (diff &lt; 3600000) { // 小于1小时
                            elem.style.color = '#fd7e14';
                        } else {
                            elem.style.color = '#667eea';
                        }
                    });
                }
                
                // 将 datetime-local 输入转换为 Jenkins 期望的格式
                function setupDateTimeInput() {
                    var scheduledTimeInput = document.querySelector('input[name="scheduledTime"]');
                    if (scheduledTimeInput) {
                        // 创建 datetime-local 输入
                        var datetimeInput = document.createElement('input');
                        datetimeInput.type = 'datetime-local';
                        datetimeInput.name = 'scheduledTime';
                        datetimeInput.required = true;
                        datetimeInput.style.width = '100%';
                        datetimeInput.style.padding = '8px';
                        datetimeInput.style.border = '1px solid #ccc';
                        datetimeInput.style.borderRadius = '4px';
                        
                        // 设置默认值为当前时间后1小时
                        var now = new Date();
                        now.setHours(now.getHours() + 1);
                        var year = now.getFullYear();
                        var month = String(now.getMonth() + 1).padStart(2, '0');
                        var day = String(now.getDate()).padStart(2, '0');
                        var hours = String(now.getHours()).padStart(2, '0');
                        var minutes = String(now.getMinutes()).padStart(2, '0');
                        datetimeInput.value = year + '-' + month + '-' + day + 'T' + hours + ':' + minutes;
                        
                        // 替换原始输入
                        scheduledTimeInput.parentNode.replaceChild(datetimeInput, scheduledTimeInput);
                        
                        // 在表单提交时转换格式
                        var form = datetimeInput.closest('form');
                        if (form) {
                            form.addEventListener('submit', function(e) {
                                var datetimeValue = datetimeInput.value;
                                if (datetimeValue) {
                                    // 转换为 Jenkins 期望的格式 (yyyy-MM-dd'T'HH:mm)
                                    var hiddenInput = document.createElement('input');
                                    hiddenInput.type = 'hidden';
                                    hiddenInput.name = 'scheduledTime';
                                    hiddenInput.value = datetimeValue;
                                    form.appendChild(hiddenInput);
                                }
                            });
                        }
                    }
                }
                
                // 初始化参数渲染
                function initializeParameterRendering() {
                    // 确保 Jenkins 表单组件正确初始化
                    if (typeof Behaviour !== 'undefined') {
                        Behaviour.applySubtree(document);
                    }
                    
                    // 为参数添加必要的样式和功能
                    var paramEntries = document.querySelectorAll('.scheduled-build-container .form-section .form-entry');
                    paramEntries.forEach(function(entry) {
                        var title = entry.querySelector('.form-label');
                        if (title) {
                            // 确保标题有正确的样式
                            title.style.fontWeight = 'bold';
                            title.style.color = '#333';
                        }
                        
                        // 为必填参数添加红色星号
                        var required = entry.querySelector('.form-label[required]');
                        if (required) {
                            var asterisk = document.createElement('span');
                            asterisk.innerHTML = ' <span style="color:red"><strong>【必填】</strong></span>';
                            required.appendChild(asterisk);
                        }
                    });
                }
                
                // 周期性规则：切换调度类型
                function switchScheduleType(type) {
                    // 更新选项卡样式
                    document.querySelectorAll('.schedule-type-option').forEach(function(option) {
                        option.classList.remove('active');
                    });
                    document.querySelector('.schedule-type-option[data-type="' + type + '"]').classList.add('active');
                    
                    // 更新内容区域
                    document.querySelectorAll('.schedule-type-content').forEach(function(content) {
                        content.classList.remove('active');
                    });
                    document.getElementById('schedule-' + type.toLowerCase()).classList.add('active');
                    
                    // 更新隐藏的scheduleType字段
                    document.getElementById('scheduleTypeInput').value = type;
                }
                
                // 周期性规则：切换星期选择
                function toggleWeekDay(day) {
                    var option = document.querySelector('.weekday-option[data-day="' + day + '"]');
                    var checkbox = document.getElementById('weekDay' + day);
                    
                    if (option.classList.contains('selected')) {
                        option.classList.remove('selected');
                        checkbox.checked = false;
                    } else {
                        option.classList.add('selected');
                        checkbox.checked = true;
                    }
                }
                
                // 编辑预约：从按钮打开编辑模态框
                function editScheduledBuildFromButton(button) {
                    var taskId = button.getAttribute('data-task-id');
                    var scheduledTime = parseInt(button.getAttribute('data-scheduled-time'));
                    var description = button.getAttribute('data-description') || '';
                    var parameters = button.getAttribute('data-parameters') || '';
                    editScheduledBuild(taskId, scheduledTime, description, parameters);
                }
                
                // 编辑预约：打开编辑模态框
                function editScheduledBuild(taskId, scheduledTime, description, parameters) {
                    var modal = document.getElementById('editModal');
                    
                    // 设置任务ID
                    document.getElementById('editTaskId').value = taskId;
                    
                    // 转换时间戳为 datetime-local 格式
                    var date = new Date(scheduledTime);
                    var year = date.getFullYear();
                    var month = String(date.getMonth() + 1).padStart(2, '0');
                    var day = String(date.getDate()).padStart(2, '0');
                    var hours = String(date.getHours()).padStart(2, '0');
                    var minutes = String(date.getMinutes()).padStart(2, '0');
                    var datetimeValue = year + '-' + month + '-' + day + 'T' + hours + ':' + minutes;
                    
                    document.getElementById('editScheduledTime').value = datetimeValue;
                    document.getElementById('editDescription').value = description;
                    
                    // 填充参数（如果有）
                    if (parameters && parameters !== 'null' && parameters !== '') {
                        var paramsObj = {};
                        try {
                            // parameters是一个字符串，格式如 "key1=value1, key2=value2"
                            if (parameters !== '无参数') {
                                var pairs = parameters.split(', ');
                                pairs.forEach(function(pair) {
                                    var kv = pair.split('=');
                                    if (kv.length === 2) {
                                        paramsObj[kv[0].trim()] = kv[1].trim();
                                    }
                                });
                            }
                        } catch (e) {
                            console.error('解析参数失败:', e);
                        }
                        
                        // 填充参数输入框
                        var paramInputs = document.querySelectorAll('#editParametersSection input, #editParametersSection select, #editParametersSection textarea');
                        paramInputs.forEach(function(input) {
                            var paramName = input.name.replace('param_', '');
                            if (paramsObj[paramName]) {
                                if (input.type === 'checkbox') {
                                    input.checked = (paramsObj[paramName] === 'true');
                                } else {
                                    input.value = paramsObj[paramName];
                                }
                            }
                        });
                    }
                    
                    modal.style.display = 'block';
                }
                
                // 编辑预约：关闭模态框
                function closeEditModal() {
                    document.getElementById('editModal').style.display = 'none';
                }
                
                // 点击模态框外部关闭
                window.onclick = function(event) {
                    var modal = document.getElementById('editModal');
                    if (event.target === modal) {
                        closeEditModal();
                    }
                }
                
                // 页面加载后立即更新一次
                window.addEventListener('DOMContentLoaded', function() {
                    updateCountdowns();
                    setupDateTimeInput();
                    initializeParameterRendering();
                    // 每秒更新一次
                    setInterval(updateCountdowns, 1000);
                    
                    // 初始化周期性规则表单
                    var defaultType = 'DAILY';
                    if (document.getElementById('scheduleTypeInput')) {
                        switchScheduleType(defaultType);
                    }
                });
            </script>
            
            <div class="scheduled-build-container">
                <div class="scheduled-build-header">
                    <h1>⏰ 预约构建管理</h1>
                </div>
            
            <!-- 添加新预约表单 -->
                <div class="add-schedule-card">
                    <h2>📝 添加新预约</h2>
                    <f:form method="post" action="schedule">
                        <f:entry title="📅 预约时间" description="选择构建执行的日期和时间">
                            <f:textbox name="scheduledTime" 
                                       value=""
                                       checkUrl="'checkTime'"
                                       checkMethod="post"/>
                        </f:entry>
                        
                        <f:entry title="📄 描述" description="为这次预约添加说明，方便后续识别">
                            <f:textbox name="description" 
                                       value=""
                                       placeholder="预约说明（可选）"/>
                        </f:entry>
                        
                        <!-- 参数 -->
                        <j:if test="${!it.jobParameters.isEmpty()}">
                            <f:section title="🔧 构建参数">
                                <j:forEach var="param" items="${it.jobParameters}">
                                    <f:entry title="${param.name}" description="${param.description}">
                                        <j:choose>
                                            <j:when test="${param.class.simpleName == 'BooleanParameterDefinition'}">
                                                <f:checkbox name="param_${param.name}" 
                                                           checked="${param.defaultParameterValue.value}"
                                                           value="true"/>
                                            </j:when>
                                            <j:when test="${param.class.simpleName == 'ChoiceParameterDefinition'}">
                                                <f:select name="param_${param.name}">
                                                    <j:forEach var="choice" items="${param.choices}">
                                                        <f:option value="${choice}" selected="${choice == param.defaultParameterValue.value}">${choice}</f:option>
                                                    </j:forEach>
                                                </f:select>
                                            </j:when>
                                            <j:when test="${param.class.simpleName == 'TextParameterDefinition'}">
                                                <f:textarea name="param_${param.name}" 
                                                           value="${param.defaultParameterValue.value}"
                                                           rows="3"/>
                                            </j:when>
                                            <j:when test="${param.class.simpleName == 'PasswordParameterDefinition'}">
                                                <f:password name="param_${param.name}" 
                                                           value="${param.defaultParameterValue.value}"/>
                                            </j:when>
                                            <j:otherwise>
                                                <f:textbox name="param_${param.name}" 
                                                          value="${param.defaultParameterValue.value}"/>
                                            </j:otherwise>
                                        </j:choose>
                                    </f:entry>
                                </j:forEach>
                            </f:section>
                        </j:if>
                        
                        <f:block>
                            <f:submit value="✓ 添加预约" class="btn-primary"/>
                        </f:block>
                    </f:form>
                </div>

            <!-- 添加周期性规则 -->
                <div class="add-schedule-card">
                    <h2>🔄 添加周期性规则</h2>
                    <p style="color: #666; margin-bottom: 20px;">设置自动重复执行的构建任务，系统会根据规则自动生成预约</p>
                    
                    <f:form method="post" action="addRecurringRule">
                        <input type="hidden" id="scheduleTypeInput" name="scheduleType" value="DAILY"/>
                        
                        <!-- 调度类型选择器 -->
                        <div class="schedule-type-selector">
                            <div class="schedule-type-option active" data-type="DAILY" onclick="switchScheduleType('DAILY')">
                                <div style="font-size: 24px; margin-bottom: 5px;">📅</div>
                                <div style="font-weight: 600;">每天</div>
                                <div style="font-size: 12px; color: #666;">每天固定时间执行</div>
                            </div>
                            <div class="schedule-type-option" data-type="WEEKLY" onclick="switchScheduleType('WEEKLY')">
                                <div style="font-size: 24px; margin-bottom: 5px;">📆</div>
                                <div style="font-weight: 600;">每周</div>
                                <div style="font-size: 12px; color: #666;">每周特定几天执行</div>
                            </div>
                            <div class="schedule-type-option" data-type="MONTHLY" onclick="switchScheduleType('MONTHLY')">
                                <div style="font-size: 24px; margin-bottom: 5px;">🗓️</div>
                                <div style="font-weight: 600;">每月</div>
                                <div style="font-size: 12px; color: #666;">每月特定几号执行</div>
                            </div>
                        </div>
                        
                        <!-- 每天配置 -->
                        <div id="schedule-daily" class="schedule-type-content active">
                            <f:entry title="⏰ 执行时间" description="选择每天执行的时间">
                                <f:textbox name="dailyTime" 
                                          value="09:00"
                                          placeholder="例如: 09:00"/>
                            </f:entry>
                        </div>
                        
                        <!-- 每周配置 -->
                        <div id="schedule-weekly" class="schedule-type-content">
                            <f:entry title="📅 选择星期" description="点击选择要执行的星期">
                                <div class="weekday-selector">
                                    <div class="weekday-option" data-day="1" onclick="toggleWeekDay(1)">
                                        <input type="checkbox" id="weekDay1" name="weekDay1" style="display:none;"/>
                                        周一
                                    </div>
                                    <div class="weekday-option" data-day="2" onclick="toggleWeekDay(2)">
                                        <input type="checkbox" id="weekDay2" name="weekDay2" style="display:none;"/>
                                        周二
                                    </div>
                                    <div class="weekday-option" data-day="3" onclick="toggleWeekDay(3)">
                                        <input type="checkbox" id="weekDay3" name="weekDay3" style="display:none;"/>
                                        周三
                                    </div>
                                    <div class="weekday-option" data-day="4" onclick="toggleWeekDay(4)">
                                        <input type="checkbox" id="weekDay4" name="weekDay4" style="display:none;"/>
                                        周四
                                    </div>
                                    <div class="weekday-option" data-day="5" onclick="toggleWeekDay(5)">
                                        <input type="checkbox" id="weekDay5" name="weekDay5" style="display:none;"/>
                                        周五
                                    </div>
                                    <div class="weekday-option" data-day="6" onclick="toggleWeekDay(6)">
                                        <input type="checkbox" id="weekDay6" name="weekDay6" style="display:none;"/>
                                        周六
                                    </div>
                                    <div class="weekday-option" data-day="7" onclick="toggleWeekDay(7)">
                                        <input type="checkbox" id="weekDay7" name="weekDay7" style="display:none;"/>
                                        周日
                                    </div>
                                </div>
                            </f:entry>
                            
                            <f:entry title="⏰ 执行时间" description="选择每周执行的时间">
                                <f:textbox name="weeklyTime" 
                                          value="09:00"
                                          placeholder="例如: 09:00"/>
                            </f:entry>
                        </div>
                        
                        <!-- 每月配置 -->
                        <div id="schedule-monthly" class="schedule-type-content">
                            <f:entry title="📆 选择日期" description="输入要执行的日期，多个日期用逗号分隔（例如: 1,15,28）">
                                <f:textbox name="monthDays" 
                                          value="1"
                                          placeholder="例如: 1,15,28"/>
                            </f:entry>
                            
                            <f:entry title="⏰ 执行时间" description="选择每月执行的时间">
                                <f:textbox name="monthlyTime" 
                                          value="09:00"
                                          placeholder="例如: 09:00"/>
                            </f:entry>
                        </div>
                        
                        <!-- 通用配置 -->
                        <f:entry title="📄 描述" description="为这个周期性规则添加说明">
                            <f:textbox name="recurringDescription" 
                                      value=""
                                      placeholder="规则说明（可选）"/>
                        </f:entry>
                        
                        <!-- 参数 -->
                        <j:if test="${!it.jobParameters.isEmpty()}">
                            <f:section title="🔧 构建参数">
                                <j:forEach var="param" items="${it.jobParameters}">
                                    <f:entry title="${param.name}" description="${param.description}">
                                        <j:choose>
                                            <j:when test="${param.class.simpleName == 'BooleanParameterDefinition'}">
                                                <f:checkbox name="recurring_param_${param.name}" 
                                                           checked="${param.defaultParameterValue.value}"
                                                           value="true"/>
                                            </j:when>
                                            <j:when test="${param.class.simpleName == 'ChoiceParameterDefinition'}">
                                                <f:select name="recurring_param_${param.name}">
                                                    <j:forEach var="choice" items="${param.choices}">
                                                        <f:option value="${choice}" selected="${choice == param.defaultParameterValue.value}">${choice}</f:option>
                                                    </j:forEach>
                                                </f:select>
                                            </j:when>
                                            <j:when test="${param.class.simpleName == 'TextParameterDefinition'}">
                                                <f:textarea name="recurring_param_${param.name}" 
                                                           value="${param.defaultParameterValue.value}"
                                                           rows="3"/>
                                            </j:when>
                                            <j:when test="${param.class.simpleName == 'PasswordParameterDefinition'}">
                                                <f:password name="recurring_param_${param.name}" 
                                                           value="${param.defaultParameterValue.value}"/>
                                            </j:when>
                                            <j:otherwise>
                                                <f:textbox name="recurring_param_${param.name}" 
                                                          value="${param.defaultParameterValue.value}"/>
                                            </j:otherwise>
                                        </j:choose>
                                    </f:entry>
                                </j:forEach>
                            </f:section>
                        </j:if>
                        
                        <f:block>
                            <f:submit value="✓ 添加周期性规则" class="btn-primary"/>
                        </f:block>
                    </f:form>
                </div>

            <!-- 周期性规则列表 -->
                <div class="schedule-list-card">
                    <h2>
                        🔄 周期性规则
                        <span class="schedule-count">${it.recurringRules.size()}</span>
                    </h2>
            <j:choose>
                <j:when test="${it.recurringRules.isEmpty()}">
                            <div class="no-data">
                                📭 暂无周期性规则
                            </div>
                </j:when>
                <j:otherwise>
                            <j:forEach var="rule" items="${it.recurringRules}">
                                <div class="rule-card ${rule.enabled ? '' : 'disabled'}">
                                    <div class="rule-header">
                                        <div class="rule-title">
                                            <j:if test="${rule.enabled}">
                                                ✅ 
                                            </j:if>
                                            <j:if test="${!rule.enabled}">
                                                ⏸️ 
                                            </j:if>
                                            ${rule.scheduleDescription}
                                        </div>
                                        <div class="rule-actions">
                                            <j:if test="${rule.enabled}">
                                                <form method="post" action="toggleRecurringRule" style="display: inline;">
                                                    <input type="hidden" name="ruleId" value="${rule.id}"/>
                                                    <input type="hidden" name="enabled" value="false"/>
                                                    <button type="submit" class="btn-secondary" title="禁用">
                                                        ⏸️ 禁用
                                                    </button>
                                                </form>
                                            </j:if>
                                            <j:if test="${!rule.enabled}">
                                                <form method="post" action="toggleRecurringRule" style="display: inline;">
                                                    <input type="hidden" name="ruleId" value="${rule.id}"/>
                                                    <input type="hidden" name="enabled" value="true"/>
                                                    <button type="submit" class="btn-secondary" title="启用">
                                                        ▶️ 启用
                                                    </button>
                                                </form>
                                            </j:if>
                                            <form method="post" action="deleteRecurringRule" style="display: inline;">
                                                <input type="hidden" name="ruleId" value="${rule.id}"/>
                                                <button type="submit" class="btn-danger" title="删除">
                                                    🗑️ 删除
                                                </button>
                                            </form>
                                        </div>
                                    </div>
                                    <j:if test="${rule.description != null and rule.description != ''}">
                                        <div style="color: #666; margin-bottom: 8px;">
                                            ${rule.description}
                                        </div>
                                    </j:if>
                                    <div class="param-display">
                                        ${rule.parametersString}
                                    </div>
                                </div>
                            </j:forEach>
                </j:otherwise>
            </j:choose>
                </div>

            <!-- 待执行的预约 -->
                <div class="schedule-list-card">
                    <h2>
                        🚀 待执行的预约
                        <span class="schedule-count">${it.pendingBuilds.size()}</span>
                    </h2>
            <j:choose>
                <j:when test="${it.pendingBuilds.isEmpty()}">
                            <div class="no-data">
                                📭 暂无待执行的预约
                            </div>
                </j:when>
                <j:otherwise>
                    <table class="sortable pane bigtable" style="width: 100%; margin-top: 10px;">
                        <thead>
                            <tr>
                                        <th style="width: 180px;">预约时间</th>
                                        <th style="width: 150px;">⏱️ 倒计时</th>
                                <th>描述</th>
                                        <th style="width: 200px;">参数</th>
                                        <th style="width: 100px;">操作</th>
                            </tr>
                        </thead>
                        <tbody>
                            <j:forEach var="task" items="${it.pendingBuilds}">
                                <tr>
                                    <td>${it.formatDateTime(task.scheduledTime)}</td>
                                            <td>
                                                <span class="countdown" data-target="${task.scheduledTime}">
                                                    ${it.getRelativeTime(task.scheduledTime)}
                                                </span>
                                            </td>
                                    <td>${task.description}</td>
                                            <td>
                                                <div class="param-display">
                                        ${task.parametersString}
                                                </div>
                                    </td>
                                    <td>
                                                <button type="button" class="btn-edit" 
                                                        data-task-id="${task.id}"
                                                        data-scheduled-time="${task.scheduledTime}"
                                                        data-description="${task.description}"
                                                        data-parameters="${task.parametersString}"
                                                        onclick="editScheduledBuildFromButton(this)">
                                                    ✏️ 编辑
                                                </button>
                                        <form method="post" action="cancel" style="display: inline;">
                                            <input type="hidden" name="taskId" value="${task.id}"/>
                                                    <button type="submit" class="btn-danger">
                                                        ✗ 取消
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            </j:forEach>
                        </tbody>
                    </table>
                </j:otherwise>
            </j:choose>
                </div>

            <!-- 所有预约历史 -->
                <div class="schedule-list-card">
                    <h2>
                        📚 所有预约记录
                        <span class="schedule-count">${it.scheduledBuilds.size()}</span>
                    </h2>
            <j:choose>
                <j:when test="${it.scheduledBuilds.isEmpty()}">
                            <div class="no-data">
                                📭 暂无预约记录
                            </div>
                </j:when>
                <j:otherwise>
                    <table class="sortable pane bigtable" style="width: 100%; margin-top: 10px;">
                        <thead>
                            <tr>
                                        <th style="width: 180px;">预约时间</th>
                                        <th style="width: 120px;">状态</th>
                                <th>描述</th>
                                        <th style="width: 200px;">参数</th>
                                        <th style="width: 140px;">操作</th>
                            </tr>
                        </thead>
                        <tbody>
                            <j:forEach var="task" items="${it.scheduledBuilds}">
                                <tr>
                                    <td>${it.formatDateTime(task.scheduledTime)}</td>
                                    <td>
                                        <j:choose>
                                            <j:when test="${task.executed}">
                                                        <span class="status-badge status-executed">✓ 已执行</span>
                                            </j:when>
                                            <j:when test="${task.cancelled}">
                                                        <span class="status-badge status-cancelled">✗ 已取消</span>
                                            </j:when>
                                            <j:when test="${task.pending}">
                                                        <span class="status-badge status-pending">⏳ 待执行</span>
                                            </j:when>
                                            <j:otherwise>
                                                        <span class="status-badge status-expired">⚠ 已过期</span>
                                            </j:otherwise>
                                        </j:choose>
                                    </td>
                                    <td>${task.description}</td>
                                            <td>
                                                <div class="param-display">
                                        ${task.parametersString}
                                                </div>
                                    </td>
                                    <td>
                                        <j:if test="${task.pending}">
                                            <form method="post" action="cancel" style="display: inline; margin-right: 5px;">
                                                <input type="hidden" name="taskId" value="${task.id}"/>
                                                        <button type="submit" class="btn-danger">
                                                            ✗ 取消
                                                </button>
                                            </form>
                                        </j:if>
                                        <form method="post" action="delete" style="display: inline;">
                                            <input type="hidden" name="taskId" value="${task.id}"/>
                                                    <button type="submit" class="btn-secondary">
                                                        🗑️ 删除
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            </j:forEach>
                        </tbody>
                    </table>
                </j:otherwise>
            </j:choose>
                </div>
            </div>
            
            <!-- 编辑预约模态框 -->
            <div id="editModal" class="modal">
                <div class="modal-content">
                    <div class="modal-header">
                        <h2>✏️ 编辑预约构建</h2>
                        <span class="close" onclick="closeEditModal()">&times;</span>
                    </div>
                    
                    <f:form method="post" action="update">
                        <input type="hidden" id="editTaskId" name="taskId" value=""/>
                        
                        <f:entry title="📅 预约时间" description="选择新的构建执行时间">
                            <input type="datetime-local" id="editScheduledTime" name="scheduledTime" 
                                   required="required"
                                   style="width: 100%; padding: 8px; border: 1px solid #ccc; border-radius: 4px;"/>
                        </f:entry>
                        
                        <f:entry title="📄 描述" description="更新预约说明">
                            <f:textbox id="editDescription" name="description" 
                                       placeholder="预约说明（可选）"/>
                        </f:entry>
                        
                        <!-- 参数 -->
                        <j:if test="${!it.jobParameters.isEmpty()}">
                            <div id="editParametersSection">
                                <f:section title="🔧 构建参数">
                                    <j:forEach var="param" items="${it.jobParameters}">
                                        <f:entry title="${param.name}" description="${param.description}">
                                            <j:choose>
                                                <j:when test="${param.class.simpleName == 'BooleanParameterDefinition'}">
                                                    <f:checkbox name="param_${param.name}" 
                                                               checked="${param.defaultParameterValue.value}"
                                                               value="true"/>
                                                </j:when>
                                                <j:when test="${param.class.simpleName == 'ChoiceParameterDefinition'}">
                                                    <f:select name="param_${param.name}">
                                                        <j:forEach var="choice" items="${param.choices}">
                                                            <f:option value="${choice}" selected="${choice == param.defaultParameterValue.value}">${choice}</f:option>
                                                        </j:forEach>
                                                    </f:select>
                                                </j:when>
                                                <j:when test="${param.class.simpleName == 'TextParameterDefinition'}">
                                                    <f:textarea name="param_${param.name}" 
                                                               value="${param.defaultParameterValue.value}"
                                                               rows="3"/>
                                                </j:when>
                                                <j:when test="${param.class.simpleName == 'PasswordParameterDefinition'}">
                                                    <f:password name="param_${param.name}" 
                                                               value="${param.defaultParameterValue.value}"/>
                                                </j:when>
                                                <j:otherwise>
                                                    <f:textbox name="param_${param.name}" 
                                                              value="${param.defaultParameterValue.value}"/>
                                                </j:otherwise>
                                            </j:choose>
                                        </f:entry>
                                    </j:forEach>
                                </f:section>
                            </div>
                        </j:if>
                        
                        <f:block>
                            <f:submit value="✓ 更新预约" class="btn-primary"/>
                            <button type="button" class="btn-secondary" onclick="closeEditModal()" 
                                    style="margin-left: 10px;">取消</button>
                        </f:block>
                    </f:form>
                </div>
            </div>
        </l:main-panel>
    </l:layout>
</j:jelly>



